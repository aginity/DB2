{"entities":[{"fqn":"/Community Queries","id":"067ce53b-d1d2-431a-9f3d-4765eb18eebf","parent_folder_id":"bb6de4af-1aad-493e-a9ee-b3e75cf58ed7","name":"Community Queries","entity_type":"FOLDER"},{"fqn":"/Community Queries/DB2/Administrative Queries","id":"0fccbb01-c97b-478b-9c05-16d9d9e1a36d","parent_folder_id":"b8c7c600-fbf1-479f-b767-c28355bffd4f","name":"Administrative Queries","entity_type":"FOLDER"},{"fqn":"/Community Queries/DB2/Administrative Queries/Unused Indexes","id":"2205a7cd-439a-44a3-93d1-815f6e67b0b8","parent_folder_id":"0fccbb01-c97b-478b-9c05-16d9d9e1a36d","name":"Unused Indexes","entity_type":"SQL_ENTITY","description":"","content":"/*\r\nPurpose\r\nTo generate a list of unused or not recently used indexes.\r\n*/\r\nselect  i.lastused,\r\n        substr(t.tabschema,1,20) as tabschema,\r\n        substr(t.tabname,1,30) as tabname,\r\n        substr(i.indschema,1,20) as indschema,\r\n        substr(indname,1,40) as indname,\r\n        substr(colnames,1,60) as colnames,\r\n        bigint(fullkeycard)as fullkeycard,\r\n        bigint(card) as table_card,\r\n        case\r\n          when card > 0 then decimal(float(fullkeycard)/float(card),5,2)\r\n          else -1\r\n        end as pct_card,\r\n        mi.index_scans,\r\n        mt.table_scans,\r\n        mi.index_only_scans,\r\n        mi.page_allocations,\r\n        volatile\r\nfrom    syscat.indexes i join syscat.tables t\r\n        on i.tabname=t.tabname and i.tabschema=t.tabschema\r\n        join table(mon_get_index('','',-2)) as mi on i.iid=mi.iid and i.tabschema=mi.tabschema and i.tabname = mi.tabname\r\n        join table(mon_get_table('','',-2)) as mt on i.tabschema=mt.tabschema and i.tabname=mt.tabname\r\nwhere\r\n        indextype not in ('BLOK', 'DIM')\r\n        and t.tabschema not like 'SYS%'\r\n        and uniquerule='D'\r\n        and not exists (select 1\r\n                from syscat.references r join syscat.keycoluse k\r\n                        on r.tabschema=k.tabschema and r.tabname=k.tabname\r\n                where t.tabschema=r.tabschema\r\n                        and r.tabname = t.tabname\r\n                        and k.colname in (      select colname\r\n                                        from syscat.indexcoluse as ic\r\n                                        where ic.indschema=i.indschema\r\n                                        and ic.indname=i.indname))\r\n        and i.lastused < current timestamp - 30 days\r\norder by mi.index_scans, i.lastused, fullkeycard, card\r\nwith ur","type":"QUERY","platform":"Snowflake","executed_at":"2019-10-24T20:12:01.985312800Z","executed_count":1},{"fqn":"/Community Queries/DB2/Administrative Queries/top 20 SQL by Execution Time","id":"28b152ae-2ecb-4183-bb5a-5ef88c641680","parent_folder_id":"0fccbb01-c97b-478b-9c05-16d9d9e1a36d","name":"top 20 SQL by Execution Time","entity_type":"SQL_ENTITY","description":"","content":"-- SQL for top 20 SQL by Execution Time\r\nSELECT \r\n  AVERAGE_EXECUTION_TIME_S as TIME_SECONDS, NUM_EXECUTIONS as EXECUTIONS, STMT_TEXT as TEXT FROM SYSIBMADM.TOP_DYNAMIC_SQL\r\nWHERE\r\n  (STMT_TEXT like 'SELECT%' or STMT_TEXT like 'select%') \r\nORDER BY \r\n  AVERAGE_EXECUTION_TIME_S \r\nDESC \r\n  FETCH FIRST 20 ROWS ONLY","type":"QUERY","platform":"Snowflake","executed_at":"2019-10-24T20:12:01.981321400Z","executed_count":1},{"fqn":"/Community Queries/DB2/Administrative Queries/Column Selectivity by Table (BLU)","id":"2de83ded-5c91-43fb-8771-745e3d9610ba","parent_folder_id":"0fccbb01-c97b-478b-9c05-16d9d9e1a36d","name":"Column Selectivity by Table (BLU)","entity_type":"SQL_ENTITY","description":"","content":"/*\r\nThis statement reports how selective at the column level queries are that run against a specific table. \r\nThis does not look at overall selectivity or row selectivity. \r\nIt will only work in DB2 10.5. BLU performs best when not all columns are referenced by queries.\r\n*/\r\n/*\r\nNotes\r\n100 percent means that on average, every query on this table references every column in the table. \r\nThe lower this number is, the more likely the power of BLU is being leveraged.\r\n*/\r\nwith t1 as (\r\nSELECT\r\n        substr(tabschema,1,18) as tabschema\r\n        ,substr(tabname,1,33) as tabname\r\n        ,(select count(*) from syscat.columns c where c.tabname=mgt.tabname and c.tabschema=mgt.tabschema) as num_cols\r\n        ,section_exec_with_col_references as num_queries\r\n        ,(num_columns_referenced /\r\n        nullif(section_exec_with_col_references, 0))\r\n        as avg_cols_ref_per_query\r\nFROM table(mon_get_table('', '', -2)) AS mgt\r\nwhere tab_organization='C'\r\n)\r\nSELECT \r\n    t1.*\r\n    , decimal((float(t1.avg_cols_ref_per_query)/float(num_cols)),5,2) * 100 as PCT_COLS\r\nFROM table(mon_get_table('', '', -2)) AS mgt2\r\n    join t1 on t1.tabschema = mgt2.tabschema and t1.tabname=mgt2.tabname\r\nwhere mgt2.tab_organization='C'\r\n    and mgt2.tabschema not like 'SYS%'\r\norder by PCT_COLS desc, t1.num_queries desc\r\nwith ur","type":"QUERY","platform":"Snowflake","executed_at":"2019-10-24T20:12:01.950406200Z","executed_count":1},{"fqn":"/Community Queries/DB2/Administrative Queries/Active Queries","id":"2ea0ad39-b52e-485f-ad06-2fd25eb94c65","parent_folder_id":"0fccbb01-c97b-478b-9c05-16d9d9e1a36d","name":"Active Queries","entity_type":"SQL_ENTITY","description":"","content":"SELECT \r\n  session_auth_id,\r\n  application_handle,\r\n  elapsed_time_sec,\r\n  activity_state,\r\n  rows_read,\r\n  SUBSTR(stmt_text,1,200)\r\nFROM \r\n  sysibmadm.mon_current_sql\r\nORDER BY \r\n  elapsed_time_sec DESC","type":"QUERY","platform":"Snowflake","executed_at":"2019-10-24T20:12:01.941428500Z","executed_count":1},{"fqn":"/Community Queries/DB2/Administrative Queries/Listing Tables and Current Size","id":"673ce0fd-b584-4374-9542-faccea6bc7a7","parent_folder_id":"0fccbb01-c97b-478b-9c05-16d9d9e1a36d","name":"Listing Tables and Current Size","entity_type":"SQL_ENTITY","description":"","content":"/*\r\nPurpose\r\nTo list tables and their current sizes in descending order by size. \r\nAlso lists whether table is column or row organized. \r\nCan be useful for finding large tables or for identifying large tables that do not match the organization of other tables in the database.\r\n*/\r\nselect  substr(t.tabschema,1,18) as tabschema\r\n        , substr(t.tabname,1,40) as tabname\r\n        , (DATA_OBJECT_P_SIZE + INDEX_OBJECT_P_SIZE)/1024 as tab_size_mb\r\nfrom    syscat.tables t\r\n        join sysibmadm.admintabinfo ati\r\n                on t.tabname=ati.tabname\r\n                and t.tabschema=ati.tabschema\r\nwhere   t.type='T'\r\n        and t.tabschema not like ('SYS%')\r\norder by 3 desc\r\nwith ur;","type":"QUERY","platform":"Snowflake","executed_at":"2019-10-24T20:12:01.967360300Z","executed_count":1},{"fqn":"/Community Queries/DB2/Administrative Queries/Columns of a Table in a Comma Separated List","id":"89043b13-0054-47f7-8e9b-8f7fb423f06a","parent_folder_id":"0fccbb01-c97b-478b-9c05-16d9d9e1a36d","name":"Columns of a Table in a Comma Separated List","entity_type":"SQL_ENTITY","description":"","content":"/*\r\nPurpose\r\nTo list the columns of a table in a comma separated list. \r\nThis is particularly useful if you have a large table, and need to list all columns explicitly or need to change only one or two columns in an export statement.\r\n*/\r\nselect listagg(cast(colname as varchar(10000)), ', ') within group (order by colno) as columns \r\nfrom syscat.columns \r\nwhere   tabschema=$schema\r\n        and tabname=$table \r\nwith ur;","type":"QUERY","platform":"Snowflake","executed_at":"2019-10-24T20:12:01.954396400Z","executed_count":1},{"fqn":"/Community Queries/DB2/Administrative Queries/BLU Compression Ratios","id":"8cb80e2c-6c6b-448e-bcd4-ff7d45707128","parent_folder_id":"0fccbb01-c97b-478b-9c05-16d9d9e1a36d","name":"BLU Compression Ratios","entity_type":"SQL_ENTITY","description":"","content":"/*\r\nPurpose\r\nThis statement calculates the compression ratio for BLU tables. \r\nThe compression ration can be used to help identify tables where compression is not optimal and you may need to look into why. \r\nCompression is critical to optimal performance on BLU.\r\n\r\nUnderstanding Compression Ratios.\r\nCompression ratios across platforms and outside of databases are generally represented as:\r\nCompression Ratio = Compressed Size / Uncompressed Size\r\nWhen talking about the results we generally refer to the compression ratio as NUM X compression. \r\n*/\r\n\r\nSELECT     substr(tabschema,1,18) as tabschema\r\n    ,substr(tabname,1,33) as tabname\r\n    , card\r\n    , npages\r\n    , decimal(1/(1-float(pctpagessaved)/100),5,2) as compr_ratio\r\nFROM SYSCAT.TABLES\r\nWHERE tableorg='C' \r\n    and tabschema not like 'SYS%'\r\n    and card > 0\r\norder by compr_ratio\r\nwith ur","type":"QUERY","platform":"Snowflake","executed_at":"2019-10-24T20:12:01.946416500Z","executed_count":1},{"fqn":"/Community Queries/DB2/Administrative Queries/Dependent MQTs and Views for a Table in a Schema","id":"91efd9e6-d0ad-468c-9636-8048d6840591","parent_folder_id":"0fccbb01-c97b-478b-9c05-16d9d9e1a36d","name":"Dependent MQTs and Views for a Table in a Schema","entity_type":"SQL_ENTITY","description":"","content":"/*\r\nPurpose\r\nTo list all MQTs and views dependent on a single table, MQT, or view. This SQL does NOT look at foreign keys to determine child tables.\r\n*/\r\nwith d1 (tabschema, tabname, dtype, bschema, bname) as (select tabschema\r\n    , tabname\r\n    , dtype \r\n    , bschema\r\n    , bname\r\nfrom syscat.tabdep \r\nwhere bschema=$schema and bname=$table\r\nUNION ALL\r\nSelect d2.tabschema\r\n    , d2.tabname\r\n    , d2.dtype \r\n    , d2.bschema\r\n    , d2.bname\r\nfrom d1, syscat.tabdep d2 where d2.bschema=d1.tabschema and d2.bname=d1.tabname \r\n)\r\nselect * from d1\r\n with ur","type":"QUERY","platform":"Snowflake","executed_at":"2019-10-24T20:12:01.958384100Z","executed_count":1},{"fqn":"/Community Queries/DB2/Administrative Queries/top 20 queries by Number of Executions","id":"a6aa05c8-3572-4578-8316-4e0af43167e0","parent_folder_id":"0fccbb01-c97b-478b-9c05-16d9d9e1a36d","name":"top 20 queries by Number of Executions","entity_type":"SQL_ENTITY","description":"","content":"-- SQL for top 20 SQL by Number of Executions\r\nSELECT \r\n  NUM_EXECUTIONS as EXECUTIONS, AVERAGE_EXECUTION_TIME_S as TIME_SECONDS, STMT_TEXT as TEXT \r\nFROM\r\n  SYSIBMADM.TOP_DYNAMIC_SQL \r\nWHERE\r\n  (STMT_TEXT like 'SELECT%' or STMT_TEXT like 'select%') \r\nORDER BY \r\n  NUM_EXECUTIONS DESC FETCH FIRST 20 ROWS ONLY","type":"QUERY","platform":"Snowflake","executed_at":"2019-10-24T20:12:01.976334600Z","executed_count":1},{"fqn":"/Community Queries/DB2","id":"b8c7c600-fbf1-479f-b767-c28355bffd4f","parent_folder_id":"067ce53b-d1d2-431a-9f3d-4765eb18eebf","name":"DB2","entity_type":"FOLDER"},{"fqn":"/Community Queries/DB2/Administrative Queries/List of users in current database with few of their authorities","id":"d6c301a4-7d7a-4133-9e89-8930a70ea7bc","parent_folder_id":"0fccbb01-c97b-478b-9c05-16d9d9e1a36d","name":"List of users in current database with few of their authorities","entity_type":"SQL_ENTITY","description":"","content":"select authid as username,\r\n       case bindaddauth when 'Y' then 1 else 0 end as bindadd,\r\n       case connectauth  when 'Y' then 1 else 0 end as connect,\r\n       case createtabauth when 'Y' then 1 else 0 end as create_tab,\r\n       case dbadmauth when 'Y' then 1 else 0 end as dbadm,\r\n       case externalroutineauth  when 'Y' then 1 else 0 end as ext_routine,\r\n       case implschemaauth when 'Y' then 1 else 0 end as implschema,  \r\n       case loadauth when 'Y' then 1 else 0 end as load,\r\n       case nofenceauth when 'Y' then 1 else 0 end as nofence,\r\n       case quiesceconnectauth when 'Y' then 1 else 0 end as quiesceconn,\r\n       case securityadmauth when 'Y' then 1 else 0 end as securityadm,\r\n       case sqladmauth when 'Y' then 1 else 0 end as sqladm,\r\n       case wlmadmauth when 'Y' then 1 else 0 end as wlmadm,\r\n       case explainauth when 'Y' then 1 else 0 end as explain,\r\n       case dataaccessauth when 'Y' then 1 else 0 end as dataaccess,\r\n       case accessctrlauth when 'Y' then 1 else 0 end as accessctrl,\r\n       case createsecureauth when 'Y' then 1 else 0 end as createsecure \r\nfrom sysibmadm.authorizationids a\r\nleft join syscat.dbauth d\r\n          on d.grantee = a.authid\r\nwhere authidtype = 'U'\r\norder by username\r\n\r\n/*\r\nColumns\r\nusename - user name\r\nbindadd - indicate if user held privilage to create new packages in the database\r\nconnect - indicate if user held privilage to connect to the database\r\ncreate_tab - indicate if user held privilage to create tables\r\ndbadm - indicate if user held DBADM authority\r\next_routine - indicate if user held authority to create external routines\r\nimplschema - indicate if user held authority to implicitly create schemas by creating objects in non-existent schemas.\r\nload - indicate if user held authority to use the database load utility.\r\nnofence - indicate if user held authority to create non-fenced user-defined functions\r\nquiesceconn - indicate if user held authority to access the database when it is quiesced\r\nsecurityadm - indicate if user held authority to administer database security\r\nsqladm - indicate if user held authority to monitor and tune SQL statements\r\nwlmadm - indicate if user held authority to manage WLM objects\r\nexplain - indicate if user held authority to explain SQL statements without requiring actual privileges on the objects in the statement\r\ndataaccess - indicate if user held authority to access data\r\naccessctrl - indicate if user held privilage to grant and revoke privilages\r\ncreatesecure - indicate if user held authority to create secure objects\r\n\r\n*/","type":"QUERY","platform":"Snowflake","executed_at":"2019-10-24T20:12:01.963370600Z","executed_count":1}]}
